<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.oneiot.lib</groupId>
  <artifactId>crypto</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>crypto</name>
  <url>http://www.oneiot.de</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <github.global.server>github</github.global.server>
    <java.version>11</java.version>
    <target.java.version>1.8</target.java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.5.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>
    <repository>
      <id>local.staging.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>
<build>
  <plugins>
    <!-- Deploys the build artifacts to github. Is executed in the "site" lifecycle phase. -->
    <plugin>
      <groupId>com.github.github</groupId>
      <artifactId>site-maven-plugin</artifactId>
      <version>0.12</version>
      <configuration>
        <!-- git commit message -->
        <message>Maven artifacts for ${project.version}</message>
        <!-- disable webpage processing -->
        <noJekyll>true</noJekyll>
        <!-- matches distribution management repository url above -->
        <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
        <!-- remote branch name -->
        <branch>refs/heads/master</branch>
        <!-- If you remove this then the old artifact will be removed and new
         one will replace. But with the merge tag you can just release by changing
                                          the version -->
        <merge>true</merge>
        <includes>
          <include>**/*</include>
        </includes>
        <!-- github repo name -->
        <repositoryName>mavenrepository</repositoryName>
        <!-- github username -->
        <repositoryOwner>EasyTOI</repositoryOwner>
        <server>${github.global.server}</server>
      </configuration>
      <executions>
        <execution>
          <goals>
            <goal>site</goal>
          </goals>
          <phase>deploy</phase>
        </execution>
      </executions>
    </plugin>

    <plugin>
      <artifactId>maven-deploy-plugin</artifactId>
      <version>2.8.1</version>
      <configuration>
        <altDeploymentRepository>local.staging.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.8.1</version>
      <configuration>
        <source>${java.version}</source>
        <target>${target.java.version}</target>
    </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>2.21.0</version>
      <dependencies>
        <dependency>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-surefire-provider</artifactId>
          <version>1.2.0-M1</version>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <version>5.2.0-M1</version>
        </dependency>
      </dependencies>
    </plugin>
  </plugins>

</build>

</project>
